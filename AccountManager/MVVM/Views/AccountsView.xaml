<UserControl x:Class="AccountManager.MVVM.Views.AccountsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:services="clr-namespace:AccountManager.Services"
             xmlns:viewModels="clr-namespace:AccountManager.MVVM.ViewModels"
             xmlns:twoStyle="clr-namespace:AccountManager.Styles"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="600">
    <UserControl.DataContext>
        <viewModels:AccountsViewModel/>
    </UserControl.DataContext>
    <UserControl.Resources>
        <services:CryptConverter x:Key="CryptToData"/>
    </UserControl.Resources>
    <StackPanel>
        <StackPanel Orientation="Horizontal">
            <Button Margin="40, 0, 0, 0" Width="250" Height="50" BorderThickness="0" Command="{Binding AddAccountCommand}"
                    Style="{twoStyle:MultiStyle Round OvalOnHover}" IsEnabled="{Binding IsAvailableByGroup, Mode=OneWay}">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0, -1" EndPoint="1, 2">
                        <GradientStop Color="Peru" Offset="0.0"/>
                        <GradientStop Color="Moccasin" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
                <TextBlock Text="Add" FontSize="16" Background="Transparent" Foreground="White" VerticalAlignment="Center" 
                           HorizontalAlignment="Center"/>
            </Button>
            <!--<Button Margin="25, 0, 0, 0" x:Name="ModGroup" Width="150" Height="50" Style="{twoStyle:MultiStyle Round OvalOnHover}" 
                    Command="{Binding SaveChangesCommand}">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0, -1" EndPoint="1, 2">
                        <GradientStop Color="BurlyWood" Offset="0.0"/>
                        <GradientStop Color="DarkGoldenrod" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
                <TextBlock Text="Save changes" FontSize="16" Background="Transparent" Foreground="White" HorizontalAlignment="Center" 
                           VerticalAlignment="Center"/>
            </Button>-->
            <Button Margin="25, 0, 0, 0" x:Name="RemGroup" Width="250" Height="50" Style="{twoStyle:MultiStyle Round OvalOnHover}"
                    Command="{Binding RemAccountCommand}" IsEnabled="{Binding IsAvailableByAccount, Mode=OneWay}">
                <Button.Background>
                    <LinearGradientBrush StartPoint="0, -1" EndPoint="1, 2">
                        <GradientStop Color="DarkGoldenrod" Offset="0.0"/>
                        <GradientStop Color="Khaki" Offset="1"/>
                    </LinearGradientBrush>
                </Button.Background>
                <TextBlock Text="Remove" FontSize="16" Background="Transparent" Foreground="White" HorizontalAlignment="Center" 
                           VerticalAlignment="Center"/>
            </Button>
        </StackPanel>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            
            <Border CornerRadius="25" Margin="25, 20, 0, 0" Height="330">
                <Border.Background>
                    <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 1">
                        <GradientStop Color="DarkSeaGreen" Offset="0.0"/>
                        <GradientStop Color="ForestGreen" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>

                <StackPanel>
                    <Border CornerRadius="25" Margin="10, 10, 10, 0" Height="70" VerticalAlignment="Top">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0, 0" EndPoint="1, 2">
                                <GradientStop Color="Crimson" Offset="0.0"/>
                                <GradientStop Color="Pink" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                        <ComboBox Margin="10" Background="Transparent" IsSynchronizedWithCurrentItem="True" 
                         ItemsSource="{Binding Groups, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         SelectedItem="{Binding SelectedGroup, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled" Style="{DynamicResource theComboBox}"
                          ItemContainerStyle="{DynamicResource theComboBoxItem}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Image Grid.Column="0" Source="{Binding ImagePath, Mode=OneWay, UpdateSourceTrigger=PropertyChanged,
                                    Converter={StaticResource CryptToData}}" Width="45" Height="45"/>
                                        <TextBlock Grid.Column="1" Foreground="White" FontFamily="Verdana" 
                                           VerticalAlignment="Center" FontSize="16" Text="{Binding Title, Mode=TwoWay,
                                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CryptToData}}"
                                           TextTrimming="CharacterEllipsis" Width="auto" Margin="10, 10"/>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Border>
                    <ListBox Margin="10" Background="Transparent" BorderThickness="0" IsSynchronizedWithCurrentItem="True" Height="230"
                         ItemsSource="{Binding Accounts, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         SelectedItem="{Binding SelectedAccount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock Foreground="White" FontFamily="Verdana" 
                                           VerticalAlignment="Center" FontSize="16" TextTrimming="CharacterEllipsis" Width="auto" 
                                           Margin="10, 10" Text="{Binding Title, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, 
                                    Converter={StaticResource CryptToData}}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </StackPanel>
            </Border>
            <StackPanel Grid.Column="1">
                <TextBox Background="Transparent" BorderThickness="0" Width="225" Margin="0, 70, 0, 0" Foreground="White"
                         FontSize="16" HorizontalContentAlignment="Center" Text="{Binding SelectedAccount.Title, Mode=TwoWay, 
                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CryptToData}}"
                          IsEnabled="{Binding IsAvailableByAccount, Mode=OneWay}"/>
                <Border Background="Tan" CornerRadius="10" Height="5" Width="250"/>
                <TextBox Background="Transparent" BorderThickness="0" Width="225" Margin="0, 50, 0, 0" Foreground="White"
                         FontSize="16" HorizontalContentAlignment="Center" Text="{Binding SelectedAccount.Login, Mode=TwoWay,
                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CryptToData}}"
                          IsEnabled="{Binding IsAvailableByAccount, Mode=OneWay}"/>
                <Border Background="Tan" CornerRadius="10" Height="5" Width="250"/>
                <TextBox Background="Transparent" BorderThickness="0" Width="225" Margin="0, 50, 0, 0" Foreground="White"
                         FontSize="16" HorizontalContentAlignment="Center" Text="{Binding SelectedAccount.Password, Mode=TwoWay,
                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CryptToData}}"
                          IsEnabled="{Binding IsAvailableByAccount, Mode=OneWay}"/>
                <Border Background="Tan" CornerRadius="10" Height="5" Width="250"/>
                <TextBox Background="Transparent" BorderThickness="0" Width="225" Margin="0, 50, 0, 0" Foreground="White"
                         FontSize="16" HorizontalContentAlignment="Center" Text="{Binding SelectedAccount.Email, Mode=TwoWay,
                    UpdateSourceTrigger=PropertyChanged, Converter={StaticResource CryptToData}}"
                          IsEnabled="{Binding IsAvailableByAccount, Mode=OneWay}"/>
                <Border Background="Tan" CornerRadius="10" Height="5" Width="250"/>
            </StackPanel>
        </Grid>
    </StackPanel>
</UserControl>
